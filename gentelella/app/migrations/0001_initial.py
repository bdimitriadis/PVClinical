# Generated by Django 3.2.8 on 2021-12-09 12:00

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True, validators=[django.core.validators.RegexValidator(code='invalid_disease', message='Όνομα πάθησης', regex='^[\\w\\-,\\(\\) ]*$')])),
                ('code', models.CharField(blank=True, default='', max_length=8, null=True, validators=[django.core.validators.RegexValidator(code='invalid_disease', message='Κωδικοποίηση πάθησης', regex='^\\d{8}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True, validators=[django.core.validators.RegexValidator(code='invalid_drug', message='Όνομα φαρμάκου', regex='^[\\w\\-,\\(\\) ]*$')])),
                ('code', models.CharField(blank=True, default='', max_length=7, null=True, validators=[django.core.validators.RegexValidator(code='invalid_drug', message='Κωδικοποίηση φαρμάκου', regex='^[a-zA-Z]{1}[0-9]{2}[a-zA-Z]{2}[0-9]{2}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CREATING', 'Υπό δημιουργία'), ('RUNNING', 'Σε εξέλιξη'), ('COMPLETED', 'Ολοκληρώθηκε')], default='CREATING', max_length=9, unique=True, verbose_name='Κατάσταση: ')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=50, null=True, validators=[django.core.validators.RegexValidator(code='invalid_title', message='Τίτλος Σεναρίου', regex='^[\\w\\-,\\(\\) ]*$')])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conditions', models.ManyToManyField(blank=True, default=None, related_name='conditions', to='app.Condition', verbose_name='conditions')),
                ('drugs', models.ManyToManyField(blank=True, default=None, related_name='drugs', to='app.Drug', verbose_name='drugs')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='app.status')),
            ],
        ),
        migrations.CreateModel(
            name='PubMed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(default='', max_length=70)),
                ('title', models.CharField(default='', max_length=500)),
                ('pubdate', models.CharField(default='', max_length=400)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('authors', models.CharField(default='', max_length=400)),
                ('url', models.CharField(default='', max_length=100)),
                ('relevance', models.CharField(choices=[(True, 'Relevant'), (False, 'Irrelevant'), ('Not sure', 'Not sure')], default='', max_length=20, null=True)),
                ('notes', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('scenario_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.scenario')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField(blank=True, default='')),
                ('workspace', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('wsview', models.CharField(default='', max_length=32)),
                ('note_datetime', models.DateTimeField(auto_now_add=True)),
                ('scenario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.scenario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='drug',
            constraint=models.UniqueConstraint(fields=('name', 'code'), name='unique_drug'),
        ),
        migrations.AddConstraint(
            model_name='condition',
            constraint=models.UniqueConstraint(fields=('name', 'code'), name='unique_condition'),
        ),
        migrations.AddConstraint(
            model_name='scenario',
            constraint=models.UniqueConstraint(fields=('title', 'owner'), name='unique_scenario'),
        ),
        migrations.AddConstraint(
            model_name='pubmed',
            constraint=models.UniqueConstraint(fields=('pid', 'user', 'scenario_id'), name='unique_article'),
        ),
        migrations.AddConstraint(
            model_name='notes',
            constraint=models.UniqueConstraint(fields=('user', 'scenario', 'workspace', 'wsview'), name='unique_note'),
        ),
    ]
