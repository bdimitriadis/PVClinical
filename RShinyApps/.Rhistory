# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
# "510kview",
#  "ChangePoint",
# "dash" ,
#  "deviceclassview",
# "deviceenforceview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
#  "drugenforceview",
# "dynprr" ,
# "foodrecallview" ,
# "labelview"  ,
#"LRTest",
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
#"LRTest_E" ,
# "PMAview" ,
#"reportview" ,
"RR_D" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
# "RR_E",
NULL
)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts",
"activesubstancedata",
"downloads"
)
needsAS <- c('RR_D_Activesubstance',
'LR_D_Activesubstancename',
'LR_E_Activesubstancename',
'RR_E_Activesubstance',
'dynprr_Activesubstance')
app <- setdiff(dirlist, exclude)
# print(app)
# app <- c('RR_D',
#          'RR_E'
#          )
for (i in seq_along( app ))
{
mypath <- app[i]
destpath1 <-paste0( base,  app[i])
if (!dir.exists(destpath1))
{
dir.create(destpath1)
}
# print(mypath)
# print(destpath1)
# print(flist)
flist <- list.files( mypath, all.files = TRUE,
ignore.case = TRUE, full.names = TRUE, no..=TRUE)
file.copy(from=flist, to= destpath1, overwrite = TRUE)
mypath <- paste0(app[i], '/www')
destpath1 <-paste0( base, mypath)
if (!dir.exists(destpath1))
{
dir.create(destpath1)
}
flist <- list.files( mypath, all.files = TRUE,
ignore.case = TRUE, full.names = TRUE, no..=TRUE)
file.copy(from=flist, to= destpath1, overwrite = TRUE)
mypath <- 'sharedscripts'
destpath1 <-paste0( base,   app[i], '/', mypath)
if (!dir.exists(destpath1))
{
dir.create(destpath1)
}
flist <- list.files( mypath, all.files = TRUE,
ignore.case = TRUE, full.names = TRUE, no..=TRUE)
file.copy(from=flist, to= destpath1, overwrite = TRUE)
###get activesubstance files
#  print(app[i])
if( app[i] %in% needsAS )
{
#    browser()
mypath <-'activesubstancedata'
destpath1 <-paste0( base,   app[i], '/', mypath)
if (!dir.exists(destpath1))
{
dir.create(destpath1)
}
flist <- list.files( mypath, all.files = TRUE,
ignore.case = TRUE, full.names = TRUE, no..=TRUE)
file.copy(from=flist, to= destpath1, overwrite = TRUE)
mypath <-'activesubstancedata/quarters'
destpath1 <-paste0( base,   app[i], '/', mypath)
if (!dir.exists(destpath1))
{
dir.create(destpath1)
}
flist <- list.files( mypath, all.files = TRUE,
ignore.case = TRUE, full.names = TRUE, no..=TRUE)
file.copy(from=flist, to= destpath1, overwrite = TRUE)
}
}
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
#  "deviceclassview",
"deviceenforceview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
"drugenforceview",
"dynprr" ,
# "foodrecallview" ,
"labelview"  ,
"LRTest",
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
"LRTest_E" ,
# "PMAview" ,
"reportview" ,
"RR_D" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
"RR_E",
NULL
)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
install.packages("zoo")
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
#  "deviceclassview",
"deviceenforceview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
"drugenforceview",
"dynprr" ,
# "foodrecallview" ,
"labelview"  ,
"LRTest",
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
"LRTest_E" ,
# "PMAview" ,
"reportview" ,
"RR_D" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
"RR_E",
NULL
)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
#  "deviceclassview",
"deviceenforceview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
"drugenforceview",
"dynprr" ,
# "foodrecallview" ,
"labelview"  ,
"LRTest",
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
"LRTest_E" ,
# "PMAview" ,
"reportview" ,
"RR_D" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
"RR_E",
NULL
)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
"RR_E",
"drugenforceview",
"dynprr" ,
"deviceenforceview",
"labelview"  ,
"LRTest_E" ,
"LRTest",
"reportview" ,
"RR_D" ,
NULL
)
#  "deviceclassview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
# "foodrecallview" ,
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
# "PMAview" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
install.packages('RcppArmadillo')
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
"RR_E",
"drugenforceview",
"dynprr" ,
"deviceenforceview",
"labelview"  ,
"LRTest_E" ,
"LRTest",
"reportview" ,
"RR_D" ,
NULL
)
#  "deviceclassview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
# "foodrecallview" ,
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
# "PMAview" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
#)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
shiny::runApp('RR_E')
install.packages("changepoint")
install.packages("changepoint")
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
"510kview",
"ChangePoint",
"dash" ,
"RR_E",
"drugenforceview",
"dynprr" ,
"deviceenforceview",
"labelview"  ,
"LRTest_E" ,
"LRTest",
"reportview" ,
"RR_D" ,
NULL
)
#  "deviceclassview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
# "foodrecallview" ,
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
# "PMAview" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
#)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# {
#   deployApp(app[i], lint=FALSE)
# }
require(rsconnect)
base <- 'C:/RProjects/deployshiny/'
dirlist <- list.dirs(full.names=FALSE, recursive=FALSE)
exclude<- c(
".git",
".Rproj.user",
"016-knitr-pdf",
"RR_D - dep",
'tmp',
"sharedscripts"
)
app <- setdiff(dirlist, exclude)
app <- c(
#"510kview",
#"ChangePoint",
"dash" ,
"RR_E",
"drugenforceview",
"dynprr" ,
"deviceenforceview",
"labelview"  ,
"LRTest_E" ,
"LRTest",
"reportview" ,
"RR_D" ,
NULL
)
#  "deviceclassview",
# "devicerecallview" ,
# "devicereglist",
# "devicereports" ,
# "foodrecallview" ,
# "LR_D_Activesubstancename" ,
#  "LR_E_Activesubstancename" ,
# "PMAview" ,
#    "RR_D_Activesubstance" ,
#    "RR_E_Activesubstance" ,
#    "dynprr_Activesubstance" ,
# "RR_Dev"  ,
#)
rsconnect::setAccountInfo(name='Name of account to save or remove',
token='User token for the account',
secret='User secret for the account')
for ( i in seq_along(app))
{
deployApp(paste(base, app[i],sep = ""), appName=app[i],forceUpdate = getOption("rsconnect.force.update.apps", TRUE))
}
# for ( i in seq_along(app))
# {
#   deployApp(app[i], lint=FALSE)
# }
shiny::runApp('RR_E')
shiny::runApp('RR_D')
runApp('RR_D')
runApp('RR_D')
runApp('RR_D')
exactrad
useexact
useexact
useexact
useexact
useexact
useexact
runApp()
C
shiny::runApp('RR_D')
runApp('RR_D')
install.packages("shinyjs")
install.packages("shinyjs")
shiny::runApp('RR_D')
shiny::runApp('QuickViewDrugEvent')
