},
"count": {
"$sum": 1
}
}
}, {
"$sort": {
"count": -1
}
}
]')}
TimeseriesForDrugEventReports<-function(drugName, eventName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"$and": [
{
"drugreaction": {
"$eq": "',toupper(eventName),'"
},
"drugreaction": {
"$eq": "',toupper(paste0("1_",toupper(drugName))),'"
}
}
]
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$group": {
"_id": {
"$toUpper": "$receiptdate"
},
"count": {
"$sum": 1
}
}
}, {
"$sort": {
"_id": 1
}
}
]')}
CocomitantForDrugEventReports<-function(drugName, eventName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and" : [
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"$and": [
{
"drugreaction": {
"$eq": "',toupper(paste0('1_',toupper(drugName))),'"
}
}, {
"drugreaction": {
"$eq": "',toupper(eventName),'"
}
}
]
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$unwind": {
"path": "$drug"
}
}, {
"$group": {
"_id": {
"$toUpper": "$drug"
},
"count": {
"$sum": 1
}
}
}, {
"$sort": {
"_id": 1
}
}
]')}
ReactionsForDrugEventReports<-function(drugName, eventName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"$and": [
{
"drugreaction": {
"$eq": "',toupper(paste0("1_",toupper(drugName))),'"
}
}, {
"drugreaction": {
"$eq": "',toupper(eventName),'"
}
}
]
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$unwind": {
"path": "$reaction"
}
}, {
"$group": {
"_id": {
"$toUpper": "$reaction"
},
"count": {
"$sum": 1
}
}
}, {
"$sort": {
"_id": 1
}
}
]')}
totalDrugReports<-function(drugName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"drugreaction": {
"$eq": "',paste0('1_',drugName),'"
}
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$count": "safetyreportid"
}
]')}
totalDrugReportsOriginal<-function(drugName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and":[
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"drug": {
"$eq": "',drugName,'"
}
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$count": "safetyreportid"
}
]')}
totalDrugEventReports<-function(drugName, eventName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"drugreaction": {
"$not": {
"$size": 0
}
},
"$and": [
{
"drugreaction": {
"$eq": "',paste0('1_',drugName),'"
}
}, {
"drugreaction": {
"$eq": "',eventName,'"
}
}
]
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$count": "safetyreportid"
}
]')}
createConDrugQuery<-function(drugName, startdate, enddate, term){
paste0('[{ "$match" : {
"$and":[
{ "drugreaction": {
"$not" : { "$size" : 0 }
},
"drugreaction": {
"$eq" : "',paste0('1_',drugName),'"
}
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
},
{ "$unwind":
{"path": "$drug"}
},
{ "$unwind":
{"path": "$drug"}
},
{ "$group":{
"_id": {
"$toUpper": "$drug"
},
"count": {
"$sum": 1
}
}
},
{"$sort":
{
"count": -1
}
}
]')
}
SearchDrugReports<-function(drugName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"drugreaction": {
"$eq": "',paste0('1_',drugName),'"
}
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$project": {
"safetyreportid": 1,
"_id": 0
}
}
]')}
SearchDrugEventReports<-function(drugName, eventName, startdate, enddate, term){
paste0('[
{
"$match": {
"$and": [
{
"$and": [
{
"drugreaction": {
"$eq": "',paste0('1_',drugName),'"
}
}, {
"drugreaction": {
"$eq": "',eventName,'"
}
}
]
},
{
"receiptdate": {
"$gte": "',paste0(startdate, "T00:00:00.000+00:00"),'",
"$lte": "',paste0(enddate, "T00:00:00.000+00:00"),'"
}
}
]
}
},  {
"$match": {
"drug": "',toupper(term),'"
}
}, {
"$project": {
"safetyreportid": 1,
"_id": 0
}
}
]')}
shiny::runApp('ChangePoint')
runApp('Dash')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
geturlquery()
runApp('LrTest')
drugName
runApp('LrTest')
runApp('LrTest')
drugName
drugNameOrg
date1
date2
totalEventsInReports(drugName=drugName, date1, date2, drugNameOrg)
drugResult <- con$aggregate(drugQuery)
drugQuery<-totalEventsInReports(drugName=drugName, date1, date2, drugNameOrg)
drugResult <- con$aggregate(drugQuery)
runApp('LrTest')
runApp('LrTest')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
drugNameOrg
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
mylist <-  getcounts999( session, v= v, t= t,
count=getprrvarname(), exactrad = input$useexact, eventName = q$t2, date1 = input$date1, date2=input$date2, drugNameOrg = q$dename )
}
runApp('QuickViewDrugEvent')
drugQuery<-totalEventsInReports(drugName=drugName, date1, date2, drugNameOrg)
drugResult <- con$aggregate(drugQuery)
runApp('QuickViewDrugEvent')
eventName<- str_replace_all(realterms[i], "[[:punct:]]", " ")
getdrugcounts()
runApp('QuickViewDrugEvent')
drugQuery<-totalEventsInReports(drugName=drugName, date1, date2, drugNameOrg)
drugResult <- con$aggregate(drugQuery)
event
eventName
drugQuery<-totalEventsInReports(drugName=drugName, date1, date2, drugNameOrg)
drugResult <- con$aggregate(drugQuery)
drugNameOrg
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('ReportView')
runApp('ReportView')
shiny::runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
!is.atomic(mydf)
is.null(colnames(mydf))
colnames(mydf)
mydf
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
mydf <- data.frame(Reaction=list(mydf))
}
mydf <- data.frame(Reaction=list(mydf))
View(mydf)
colnames(mydf) <- 'Reaction'
runApp('ReportView')
runApp('ReportView')
runApp('RR_D')
shiny::runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
getdrugcounts()$mydf
runApp('QuickViewDrugEvent')
getcounts999( session, v= v, t= t,
count=getprrvarname(), exactrad = input$useexact, eventName = q$t2, date1 = input$date1, date2=input$date2, drugNameOrg = q$dename )
q$dename
q$t2
q$ename
q$dename
con_atc <- mongo("atc", url = "mongodb://pv_user:DnKrgEBXGR@160.40.71.111:27017/FDAforPVClinical")
drug <- con_atc$find(paste0('{"code" : "A02BD01"}'))
drug
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
con <- mongo("dict_fda", url = "mongodb://pv_user:DnKrgEBXGR@160.40.71.111:27017/FDAforPVClinical")
runApp('QuickViewDrugEvent')
v
mydf[which(mydf$term==eventName),]
eventName
mydf[which(mydf$term=='RASH'),]
runApp('QuickViewDrugEvent')
shiny::runApp('ReportView')
mongoConnection <- function(){
return('mongodb://pv_user:DnKrgEBXGR@160.40.71.111:27017/FDAforPVClinical')
}
mongoConnection()
runApp('ReportView')
runApp('ReportView')
shiny::runApp('ChangePoint')
runApp('ChangePoint')
runApp('ChangePoint')
runApp('ChangePoint')
runApp('ChangePoint')
runApp('ChangePoint')
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
runApp('DynPRR')
shiny::runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
runApp('ReportView')
shiny::runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
runApp('DynPRR')
