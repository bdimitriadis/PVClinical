names <- c('v1','t1','v3', 't3', 'v2', 't2')
values <- c( getbestvar1(), getbestterm1(), gettimevar(), gettimerange(), paste0( 'patient.drug.drugindication', '.exact') )
mydf[,2] <- numcoltohyper(mydf[ , 2], mydf[ , 1], names, values, mybaseurl = getcururl(), addquotes=TRUE )
# mydf[,1] <- makemedlinelink(sourcedf[,1], mydf[,1])
return( list( mydf=mydf, myurl=(myurl), sourcedf=sourcedf ) )
})
#Get total counts in database for each event and Total reports in database
gettotals<- reactive({
geturlquery()
v <- c( '_exists_', '_exists_', gettimevar() )
t <- c( getprrvarname(), getbestvar1(), gettimerange() )
totalurl <- buildURL(v, t,  count='', limit=1)
totalreports <- fda_fetch_p( session, totalurl, flag=NULL)
total <- totalreports$meta$results$total
v <- c( '_exists_', '_exists_', getbestvar1(), gettimevar() )
t <- c( getbestvar1(), getprrvarname(), getbestterm1(), gettimerange() )
totaldrugurl <- buildURL( v, t, count='', limit=1)
totaldrugreports <- fda_fetch_p( session, totaldrugurl, flag=paste( 'No Reports for',
ifelse(getwhich()=='D', 'drug', 'event' ), getterm1( session ), '<br>' ) )
#     if ( length( totaldrugreports )==0 )
#       {
#       totaldrugurl <- buildURL( v= getvar1(), t=getterm1( session ), count='', limit=1)
#
#       totaldrugreports <- fda_fetch_p( session, totaldrugurl, flag= paste( 'No Reports of Drug', getterm1( session ) ) )
#       }
totaldrug <- totaldrugreports$meta$results$total
adjust <- total/totaldrug
out <- list(total=total, totaldrug=totaldrug, adjust=adjust,
totalurl=(totalurl), totaldrugurl=(totaldrugurl) )
})
#Calculate PRR and put in merged table
getprr <- reactive({
geturlquery()
#    totals <- gettotals()
#    browser()
comblist <- makecomb(session, getdrugcounts()$mydf, geteventtotals(), gettotals(), getsearchtype())
comb <- comblist$comb
if(is.null(comb)){
return(NULL)
}
if (length(comb) < 1)
{
return(NULL)
# tmp <- data.frame( Error=paste('No results for', input$useexact, getterm1(session), '.'),
#                    count=0 )
# return( list( comb=tmp, sourcedf=tmp) )
}
# ror <- comblist$ror
comb$ror <- round(comb$ror, 2)
if (getwhich() =='D'){
names <- c('exactD', 'exactE','v1', 'term1','term2')
values <- c(input$useexact , 'exact', getvar1(), gsub( '"', '', getbestterm1(), fixed=TRUE  ) )
#      browser()
exacttext <- paste0(  '&exactD=', input$useexact , '&exactE=exact' )
links <-getcpalinks(comb[ , 1], names, values, getcururl() )
comb <- data.frame( M='M' , comb, links$dynprr, links$cpa,  comb$ror, comb$nij)
#      print( names(comb) )
sourcedf <- comb
colname <- i18n()$t("Preferred Term")
iname <- i18n()$t("Definition")
medlinelinks <- makemedlinelink(sourcedf[,2], iname)
} else {
names <- c('exactD', 'exactE','v2','term2', 'v1','term1')
values <- c('exact', input$useexact, getvar1(), gsub( '"', '', getbestterm1(), fixed=TRUE  ), input$v1 )
exacttext <- paste0(  '&exactD=exact', '&exactE=', input$useexact )
links <-getcpalinks(comb[ , 1], names, values, getcururl(), appendtext =  exacttext )
comb <- data.frame(D='D', M='L' , comb, links$dynprr, links$cpa,  comb$ror, comb$nij)
sourcedf <- comb
colname <- i18n()$t("Drug Name")
#browser()
iname <- c( i18n()$t("Dashboard"), i18n()$t("Label"))
if (input$v1 != 'patient.drug.medicinalproduct')
{
drugvarname <- gsub( "patient.drug.","" , input$v1 , fixed=TRUE)
drugvar <- paste0( "&v1=", drugvarname)
medlinelinks <- coltohyper( paste0( '%22' , sourcedf[, 'term' ], '%22' ), 'L',
mybaseurl = getcururl(),
display= rep(iname[2], nrow( sourcedf ) ),
append= drugvar )
drugvar <- paste0( "&v1=", input$v1 )
dashlinks <- coltohyper( paste0( '%22' , sourcedf[, 'term' ], '%22' ), 'DA',
mybaseurl = getcururl(),
display= rep(iname[1], nrow( sourcedf ) ),
append= drugvar )
comb[,'D'] <- dashlinks
}
else {
medlinelinks <- rep(' ', nrow( sourcedf ) )
}
}
comb[,'M'] <- medlinelinks
names <- c('v1','t1','v3', 't3' ,'v2', 't2')
values <- c(getbestvar1(), getbestterm1(), gettimevar(), gettimerange(), getprrvarname() )
comb[,'count.x'] <- numcoltohyper(comb[ , 'count.x'], comb[ , 'term'], names, values, mybaseurl =getcururl(), addquotes=TRUE )
names <- c('v1','t1','v3', 't3' ,'v2', 't2')
values <- c( '_exists_', getvar1(), gettimevar(), gettimerange(), getprrvarname() )
comb[, 'count.y' ] <- numcoltohyper(comb[ , 'count.y' ], comb[ , 'term'], names, values , mybaseurl = getcururl(), addquotes=TRUE)
comb[,'term'] <- coltohyper( comb[,'term'], ifelse(getwhich()=='D', 'E', 'D' ),
mybaseurl = getcururl(), append= paste0( "&v1=", input$v1, "&useexact=", 'exact', gettimeappend()) )
#     comb <- comb[order(comb$prr, decreasing = TRUE),]
#     sourcedf <- sourcedf[order(sourcedf$prr, decreasing = TRUE),]
#     row.names(comb)<- seq(1:nrow(comb))
countname <- paste( i18n()$t("Counts for"), getterm1( session ))
names(comb) <-  c( iname, colname,countname,
'Counts for All Reports','PRR', 'RRR',  'a', 'b', 'c', 'd', 'Dynamic PRR', 'Change Point Analysis', 'ROR', 'nij')
# keptcols <-  c( iname, colname,countname,
#                                 'Counts for All Reports', 'PRR',  'Dynamic PRR', 'Change Point Analysis', 'ROR', 'nij')
keptcols <-  c(  colname, countname,
'PRR', 'ROR')
#    mydf <- mydf[, c(1:4, 7,8,9)]
return( list( comb=comb[, keptcols], sourcedf=sourcedf, countname=countname, colname=colname) )
})
geteventtotalstable <- reactive({
geturlquery()
mydf <- geteventtotals()
if(is.null(mydf)){
return(NULL)
}
sourcedf <- mydf
names <- c('v1','t1','v3', 't3' ,'v2', 't2')
values <- c('_exists_', getvar1( ), gettimevar(), gettimerange()  , getprrvarname() )
mydf[,2] <- numcoltohyper(mydf[ , 2], mydf[ , 1], names, values, mybaseurl = getcururl(), addquotes=TRUE )
mydf[,1] <- coltohyper(mydf[,1], ifelse( getwhich()=='D', 'E', 'D'),
mybaseurl = getcururl(), append= paste0( "&v1=", input$v1, "&useexact=", 'exact', gettimeappend() ) )
print(head(mydf))
return( list(mydf=mydf, sourcedf=sourcedf) )
})
print(head(mydf))
View(tt)
View(prrForExcel)
exit
View(prrForExcel)
prrForExcel[["sourcedf"]][["comb.ror"]]
prrForExcel[["sourcedf"]][["prr"]]
prrForExcel[["sourcedf"]][["links.dynprr"]]
prrForExcel[["comb"]][["PRR"]]
View(varprefixes)
varprefixes
View(specifieddrug2ForExcel)
shiny::runApp('RR_D')
mydf<-prr()
prrForExcel[["sourcedf"]][["term"]]
install.packages("tm")
shiny::runApp('RR_D')
prrForExcel[["countname"]]
runApp('RR_D')
View(prre)
View(makecomb)
View(prrd)
View(prre_ci)
View(ror)
View(gettt)
View(allvars)
View(allvars)
View(buildtable)
View(extractbaseurl)
View(allvars)
View(fda_fetch_p)
runApp('RR_D')
shiny::runApp('RR_D')
View(specifieddrug2ForExcel)
runApp('RR_D')
shiny::runApp('RR_D')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/QuickViewDrugEvent')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/RR_D')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/QuickViewDrugEvent')
shiny::runApp('RR_D')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/QuickViewDrugEvent')
install.packages("plotly")
runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/RR_D_Activesubstance')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
View(getcounts999)
runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrug')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/RR_D')
View(getdf)
runApp('RR_D')
View(getdrugvarchoices)
totalurl <- buildURL(v, t,  count='', limit=1)
runApp('RR_D')
shiny::runApp('RR_D')
totaldrugurl
source('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/sharedscripts/prr2.R')
View(popprr2)
runApp('RR_D')
runApp('RR_D')
runApp('RR_D')
totalurl
nij <- 1269
n.j <- 214696
n.. <- 10694691
ni. <- 21569
num <- nij/(n.j-nij)
denom <- (ni.)/(n.. - ni.)
val <- num/denom
val
nij <- 1269-1202
n.j <- 214696
n.. <- 10694691
ni. <- 21570-19284
num <- nij/(n.j-nij)
denom <- (ni.)/(n.. - ni.)
val <- num/denom
val
num1 <- nij/n.j
denom1 <- ( ni.-nij )/(  n.. - n.j )
prr_test <- num1/denom1
prr_test
shiny::runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
runApp('QuickViewDrugEvent')
shiny::runApp('QuickViewDrugEvent')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
t
runApp('LrTest')
runApp()
runApp('LrTest')
runApp('LrTest')
getwd()
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
shiny::runApp('LrTest')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/LR_E_Activesubstancename')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/LrTest')
runApp('LrTest')
runApp('LrTest')
shiny::runApp('LrTest')
shiny::runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
shiny::runApp('LrTest')
runApp('LrTest')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/QuickViewDrugEvent')
runApp('C:/Users/dimst/Desktop/project/pvclinical-dashboard/RShinyApps/LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
totaldrugurl
totalurl
runApp('LrTest')
nij <- 4981
ni. <- 135561
n.j <- 10694691
n.. <- 395398
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
# browser()
aterm <- suppressWarnings( a*( log(a) - log( a + b) ) )
cterm <- suppressWarnings( c*( log(c) - log(c + d) ) )
acterm <- suppressWarnings( ( a + c ) * ( log(a + c) - log ( a + b + c + d)) )
llr <- aterm + cterm - acterm
llr
nij <- 4981
ni. <- 135561
n.j <- 28931999
n.. <- 12611618
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
# browser()
aterm <- suppressWarnings( a*( log(a) - log( a + b) ) )
cterm <- suppressWarnings( c*( log(c) - log(c + d) ) )
acterm <- suppressWarnings( ( a + c ) * ( log(a + c) - log ( a + b + c + d)) )
llr <- aterm + cterm - acterm
llr
nij <- 4981
ni. <- 135561
n.j <- 28931999
n.. <- 12611618
prrd <- function( n.., ni., n.j, nij ) {
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
num <- a/(a + b)
denom <- c/(c+d)
val <- num/denom
val[ which(is.infinite(val) ) ] <- 9999
return( val )
}
pi. <- ni./n..
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
RR <- prrd( n.., ni., n.j, nij )
llr[is.nan(llr)] <- 0
RR
shiny::runApp('LrTest')
browser()
nij <- 4981
ni. <- 135561
n.j <- 395398
n.. <- 28931999
prrd <- function( n.., ni., n.j, nij ) {
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
num <- a/(a + b)
denom <- c/(c+d)
val <- num/denom
val[ which(is.infinite(val) ) ] <- 9999
return( val )
}
pi. <- ni./n..
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
RR <- prrd( n.., ni., n.j, nij )
llr[is.nan(llr)] <- 0
RR
nij <- 4981
ni. <- 220990
n.j <- 395398
n.. <- 28931999
prrd <- function( n.., ni., n.j, nij ) {
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
num <- a/(a + b)
denom <- c/(c+d)
val <- num/denom
val[ which(is.infinite(val) ) ] <- 9999
return( val )
}
pi. <- ni./n..
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
RR <- prrd( n.., ni., n.j, nij )
llr[is.nan(llr)] <- 0
RR
View(comb)
View(comb)
View(alleventdf)
View(alleventdf)
View(allevent)
View(allevent)
nij <- 4981
ni. <- 220990
n.j <- 135561
n.. <- 28931999
prrd <- function( n.., ni., n.j, nij ) {
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
num <- a/(a + b)
denom <- c/(c+d)
val <- num/denom
val[ which(is.infinite(val) ) ] <- 9999
return( val )
}
pi. <- ni./n..
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
RR <- prrd( n.., ni., n.j, nij )
llr[is.nan(llr)] <- 0
RR
nij <- 4981
ni. <- 135561
n.j <- 395398
n.. <- 28931999
prrd <- function( n.., ni., n.j, nij ) {
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
num <- a/(a + b)
denom <- c/(c+d)
val <- num/denom
val[ which(is.infinite(val) ) ] <- 9999
return( val )
}
pi. <- ni./n..
a <- nij
b <- ni. - nij
c <- n.j - nij
d <- n.. - ni. - n.j + nij
RR <- prrd( n.., ni., n.j, nij )
llr[is.nan(llr)] <- 0
RR
runApp('LrTest')
runApp('LrTest')
runApp('LrTest')
shiny::runApp('LrTest')
runApp('LrTest')
install.packages("nycflights13")
install.packages("mongolite")
library(mongolite)
con <- mongo("mtcars", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"reactionmeddrapt":"Dysarthria"}')
con <- mongo("mtcars", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
View(jan1)
source('C:/Users/dimst/Desktop/mongoTest.R')
con <- mongo("fda", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
View(mydata)
con <- mongo("fda", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
View(con)
library(mongolite)
con <- mongo("fda", url =
"//127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con$export()
con <- mongo("fda", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
con$index
con$index()
con <- mongo("medical_db", url =
"mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
library(mongolite)
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017/")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
View(mydata)
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017")
#jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017")
con$export()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017/?compressors=enabled&gssapiServiceName=mongodb")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("medical_db", url = "mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb")
con <- mongo("fda", url = "mongodb://127.0.0.1:27017/medical_db")
jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("fda", url = "mongodb://127.0.0.1:27017/medical_db")
#jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
con <- mongo("fda", url = "mongodb://127.0.0.1:27017/medical_db")
#jan1 <- con$find('{"safetyreportid":10231933}')
mydata <- con$find()
jan1 <- con$find('{"safetyreportid":5055903-4}')
jan1 <- con$find('{"safetyreportid":"5055903-4"}')
saveRDS(jan1, "exampleJson")
getWd
getwd()
jan1 <- con$find('{"medicinalproduct":"PROCRIT"}')
jan1 <- con$find('{"patient.drug.medicinalproduct":"PROCRIT"}')
jan1 <- con$find('{"patient.drug.medicinalproduct":"PROCRIT", "patient.drug.drugcharacterization
":"1"}')
jan1 <- con$find('{"patient.drug.medicinalproduct":"PROCRIT", "patient.drug.drugcharacterization
":1}')
jan1 <- con$find('{"patient.drug.medicinalproduct":"PROCRIT", "patient.drug.drugcharacterization
":1}')
jan1 <- con$find('{"patient.drug.medicinalproduct":"PROCRIT", "patient.drug.drugcharacterization":"1"}')
jan1
jan1$safetyreportid
View(jan1)
View(jan1)
View(jan1[[14]][[2]])
jan1$patient$drug
jan1$patient$drug[[1]]
jan1$patient$drug[[2]]
jan1$patient$drug[[3]]
jan1 <- con$find('{"patient.drug.medicinalproduct":"CORTISONE", "patient.drug.drugcharacterization":"1"}')
jan1$patient$drug[[1]]
